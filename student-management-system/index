<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>学生管理数据库</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        /* 登录界面样式 */
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }
        
        .login-box {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            text-align: center;
            max-width: 400px;
            width: 100%;
        }
        
        .login-title {
            color: #4a5568;
            margin-bottom: 30px;
            font-size: 2em;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .login-input {
            width: 100%;
            padding: 15px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 16px;
            margin-bottom: 20px;
            transition: border-color 0.3s ease;
        }
        
        .login-input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .login-btn {
            width: 100%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 15px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            font-size: 16px;
            transition: transform 0.3s ease;
        }
        
        .login-btn:hover {
            transform: translateY(-2px);
        }
        
        .login-error {
            color: #e53e3e;
            margin-top: 15px;
            display: none;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            position: relative;
        }
        
        .logout-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #e53e3e, #c53030);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
        }
        
        .logout-btn:hover {
            transform: translateY(-1px);
        }
        
        h1 {
            color: #4a5568;
            text-align: center;
            margin-bottom: 10px;
            font-size: 2.5em;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .nav-tabs {
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 20px;
        }
        
        .tab-btn {
            padding: 12px 24px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .tab-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .tab-btn.active {
            background: linear-gradient(135deg, #48bb78, #38a169);
        }
        
        .tab-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            margin-top: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #4a5568;
        }
        
        input, select, textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }
        
        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 5px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .btn-success {
            background: linear-gradient(135deg, #48bb78, #38a169);
        }
        
        .btn-danger {
            background: linear-gradient(135deg, #f56565, #e53e3e);
        }
        
        .btn-warning {
            background: linear-gradient(135deg, #ed8936, #dd6b20);
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .student-card {
            background: linear-gradient(135deg, #ffffff, #f7fafc);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        
        .student-card:hover {
            transform: translateY(-5px);
        }
        
        .record-item {
            background: linear-gradient(135deg, #f8f9ff, #e6f3ff);
            border-left: 4px solid #667eea;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
        }
        
        .search-bar {
            width: 100%;
            padding: 15px;
            border: 2px solid #e2e8f0;
            border-radius: 25px;
            font-size: 16px;
            margin-bottom: 20px;
            background: rgba(255, 255, 255, 0.9);
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
        }
        
        .stat-number {
            font-size: 2em;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .attachment-preview {
            max-width: 100px;
            max-height: 100px;
            border-radius: 8px;
            margin: 5px;
        }
        
        .hidden {
            display: none;
        }
        
        .file-upload-area {
            border: 2px dashed #667eea;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            margin-bottom: 15px;
            background: rgba(102, 126, 234, 0.1);
        }
        
        .money-positive {
            color: #38a169;
            font-weight: bold;
        }
        
        .money-negative {
            color: #e53e3e;
            font-weight: bold;
        }
        
        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .nav-tabs {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- 登录界面 -->
    <div id="login-screen" class="login-container">
        <div class="login-box">
            <h2 class="login-title">🔐 学生管理系统</h2>
            <p style="color: #666; margin-bottom: 30px;">请输入密码访问系统</p>
            <form id="login-form">
                <input 
                    type="password" 
                    id="login-password" 
                    class="login-input" 
                    placeholder="请输入系统密码"
                    required
                >
                <button type="submit" class="login-btn">🚀 登录系统</button>
                <div id="login-error" class="login-error">密码错误，请重试</div>
            </form>
        </div>
    </div>

    <!-- 主应用界面 -->
    <div id="main-app" style="display: none;">
    <div class="container">
        <div class="header">
            <button class="logout-btn" onclick="logout()">🚪 退出登录</button>
            <h1>🎓 学生管理数据库</h1>
            <div class="nav-tabs">
                <button class="tab-btn active" onclick="showTab('students')">学生管理</button>
                <button class="tab-btn" onclick="showTab('interactions')">互动记录</button>
                <button class="tab-btn" onclick="showTab('money')">零用钱管理</button>
                <button class="tab-btn" onclick="showTab('reports')">数据统计</button>
            </div>
        </div>

        <!-- 学生管理 -->
        <div id="students-tab" class="tab-content">
            <h2>学生管理</h2>
            <form id="student-form">
                <div class="form-row">
                    <div class="form-group">
                        <label for="student-name">学生姓名 *</label>
                        <input type="text" id="student-name" required>
                    </div>
                    <div class="form-group">
                        <label for="student-age">年龄</label>
                        <input type="number" id="student-age" min="1" max="100">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="student-school">学校名称</label>
                        <input type="text" id="student-school" placeholder="例：北京大学">
                    </div>
                    <div class="form-group">
                        <label for="student-grade">年级/专业</label>
                        <input type="text" id="student-grade" placeholder="例：计算机科学大一">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="student-phone">学生联系电话</label>
                        <input type="tel" id="student-phone">
                    </div>
                    <div class="form-group">
                        <label for="parent-phone">家长联系方式</label>
                        <input type="tel" id="parent-phone" placeholder="家长姓名 + 电话">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="parent-name">家长姓名</label>
                        <input type="text" id="parent-name">
                    </div>
                    <div class="form-group">
                        <label for="dorm-contact">宿管联系方式</label>
                        <input type="text" id="dorm-contact" placeholder="宿管姓名 + 电话">
                    </div>
                </div>
                <div class="form-group">
                    <label for="student-notes">备注</label>
                    <textarea id="student-notes" rows="3" placeholder="其他重要信息..."></textarea>
                </div>
                <button type="submit" class="btn btn-success">添加学生</button>
                <button type="button" class="btn" onclick="clearStudentForm()">清空表单</button>
            </form>
            
            <input type="text" class="search-bar" id="student-search" placeholder="🔍 搜索学生...">
            <div id="students-list"></div>
        </div>

        <!-- 互动记录 -->
        <div id="interactions-tab" class="tab-content hidden">
            <h2>互动记录</h2>
            <form id="interaction-form">
                <div class="form-row">
                    <div class="form-group">
                        <label for="interaction-student">学生 *</label>
                        <select id="interaction-student" required>
                            <option value="">请选择学生</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="interaction-type">互动类型 *</label>
                        <select id="interaction-type" required>
                            <option value="">请选择类型</option>
                            <option value="会议">面对面会议</option>
                            <option value="电话">电话沟通</option>
                            <option value="邮件">邮件交流</option>
                            <option value="微信">微信聊天</option>
                            <option value="家访">家访</option>
                            <option value="其他">其他</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="interaction-date">日期 *</label>
                        <input type="date" id="interaction-date" required>
                    </div>
                    <div class="form-group">
                        <label for="interaction-duration">时长 (分钟)</label>
                        <input type="number" id="interaction-duration" min="1">
                    </div>
                </div>
                <div class="form-group">
                    <label for="interaction-summary">互动摘要 *</label>
                    <textarea id="interaction-summary" rows="3" required placeholder="描述这次互动的内容和结果..."></textarea>
                </div>
                <div class="form-group">
                    <label for="interaction-attachments">上传附件</label>
                    <div class="file-upload-area">
                        <input type="file" id="interaction-attachments" multiple accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.txt">
                        <p>点击或拖拽文件到这里上传</p>
                    </div>
                </div>
                <button type="submit" class="btn btn-success">记录互动</button>
                <button type="button" class="btn" onclick="clearInteractionForm()">清空表单</button>
            </form>
            
            <input type="text" class="search-bar" id="interaction-search" placeholder="🔍 搜索互动记录...">
            <div id="interactions-list"></div>
        </div>

        <!-- 零用钱管理 -->
        <div id="money-tab" class="tab-content hidden">
            <h2>零用钱管理</h2>
            <form id="money-form">
                <div class="form-row">
                    <div class="form-group">
                        <label for="money-student">学生 *</label>
                        <select id="money-student" required>
                            <option value="">请选择学生</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="money-type">交易类型 *</label>
                        <select id="money-type" required>
                            <option value="">请选择类型</option>
                            <option value="收入">收入 (+)</option>
                            <option value="支出">支出 (-)</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="money-amount">金额 *</label>
                        <input type="number" id="money-amount" step="0.01" min="0" required placeholder="0.00">
                    </div>
                    <div class="form-group">
                        <label for="money-date">日期 *</label>
                        <input type="date" id="money-date" required>
                    </div>
                </div>
                <div class="form-group">
                    <label for="money-category">分类</label>
                    <select id="money-category">
                        <option value="">请选择分类</option>
                        <option value="零花钱">零花钱</option>
                        <option value="奖励">奖励</option>
                        <option value="礼物">礼物</option>
                        <option value="学习用品">学习用品</option>
                        <option value="食物">食物</option>
                        <option value="娱乐">娱乐</option>
                        <option value="交通">交通</option>
                        <option value="其他">其他</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="money-description">描述</label>
                    <textarea id="money-description" rows="2" placeholder="交易描述..."></textarea>
                </div>
                <div class="form-group">
                    <label for="money-attachments">上传附件 (收据、凭证等)</label>
                    <div class="file-upload-area">
                        <input type="file" id="money-attachments" multiple accept=".pdf,.jpg,.jpeg,.png,.txt">
                        <p>点击或拖拽文件到这里上传</p>
                    </div>
                </div>
                <button type="submit" class="btn btn-success">记录交易</button>
                <button type="button" class="btn" onclick="clearMoneyForm()">清空表单</button>
            </form>
            
            <input type="text" class="search-bar" id="money-search" placeholder="🔍 搜索交易记录...">
            <div id="money-list"></div>
        </div>

        <!-- 数据统计 -->
        <div id="reports-tab" class="tab-content hidden">
            <h2>数据统计</h2>
            <div class="stats-grid" id="stats-grid">
                <!-- 统计卡片将在这里动态生成 -->
            </div>
            
            <div class="form-group">
                <button class="btn btn-warning" onclick="exportData()">📊 导出所有数据</button>
                <button class="btn btn-success" onclick="importData()">📥 导入数据</button>
                <button class="btn btn-danger" onclick="clearAllData()">🗑️ 清空所有数据</button>
            </div>
            
            <div id="detailed-reports"></div>
        </div>
    </div>
    </div>

    <script>
        // 系统配置
        const SYSTEM_PASSWORD = "student2024"; // 修改这里设置你的密码
        
        // 身份验证
        function checkAuth() {
            const isLoggedIn = sessionStorage.getItem('studentDB_loggedIn');
            if (isLoggedIn === 'true') {
                showMainApp();
            } else {
                showLoginScreen();
            }
        }
        
        function showLoginScreen() {
            document.getElementById('login-screen').style.display = 'flex';
            document.getElementById('main-app').style.display = 'none';
        }
        
        function showMainApp() {
            document.getElementById('login-screen').style.display = 'none';
            document.getElementById('main-app').style.display = 'block';
        }
        
        function login(e) {
            e.preventDefault();
            const password = document.getElementById('login-password').value;
            
            if (password === SYSTEM_PASSWORD) {
                sessionStorage.setItem('studentDB_loggedIn', 'true');
                showMainApp();
                document.getElementById('login-password').value = '';
                document.getElementById('login-error').style.display = 'none';
            } else {
                document.getElementById('login-error').style.display = 'block';
                document.getElementById('login-password').value = '';
                
                // 3秒后隐藏错误信息
                setTimeout(() => {
                    document.getElementById('login-error').style.display = 'none';
                }, 3000);
            }
        }
        
        function logout() {
            if (confirm('确定要退出系统吗？')) {
                sessionStorage.removeItem('studentDB_loggedIn');
                showLoginScreen();
            }
        }
        // 数据存储
        let students = [];
        let interactions = [];
        let moneyRecords = [];
        let nextStudentId = 1;
        let nextInteractionId = 1;
        let nextMoneyId = 1;

        // 本地存储功能
        function saveToLocalStorage() {
            const data = {
                students,
                interactions,
                moneyRecords,
                nextStudentId,
                nextInteractionId,
                nextMoneyId,
                lastSaved: new Date().toISOString()
            };
            localStorage.setItem('studentDatabase', JSON.stringify(data));
        }

        function loadFromLocalStorage() {
            const saved = localStorage.getItem('studentDatabase');
            if (saved) {
                try {
                    const data = JSON.parse(saved);
                    students = data.students || [];
                    interactions = data.interactions || [];
                    moneyRecords = data.moneyRecords || [];
                    nextStudentId = data.nextStudentId || 1;
                    nextInteractionId = data.nextInteractionId || 1;
                    nextMoneyId = data.nextMoneyId || 1;
                    
                    console.log('数据已从本地存储加载');
                    return true;
                } catch (error) {
                    console.error('加载本地数据失败:', error);
                    return false;
                }
            }
            return false;
        }

        function importData() {
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = '.json';
            input.onchange = function(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        try {
                            const data = JSON.parse(e.target.result);
                            if (confirm('确定要导入数据吗？这会覆盖当前所有数据！')) {
                                students = data.students || [];
                                interactions = data.interactions || [];
                                moneyRecords = data.moneyRecords || [];
                                nextStudentId = data.nextStudentId || 1;
                                nextInteractionId = data.nextInteractionId || 1;
                                nextMoneyId = data.nextMoneyId || 1;
                                
                                saveToLocalStorage();
                                updateDisplay();
                                alert('✅ 数据导入成功！');
                            }
                        } catch (error) {
                            alert('❌ 文件格式错误，导入失败！');
                        }
                    };
                    reader.readAsText(file);
                }
            };
            input.click();
        }

        // 初始化
        document.addEventListener('DOMContentLoaded', function() {
            // 检查登录状态
            checkAuth();
            
            // 绑定登录表单
            document.getElementById('login-form').addEventListener('submit', login);
            
            // 加载本地存储的数据
            const loaded = loadFromLocalStorage();
            if (loaded) {
                console.log('已加载之前保存的数据');
            }
            
            // 设置默认日期为今天
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('interaction-date').value = today;
            document.getElementById('money-date').value = today;
            
            // 绑定表单提交事件
            document.getElementById('student-form').addEventListener('submit', addStudent);
            document.getElementById('interaction-form').addEventListener('submit', addInteraction);
            document.getElementById('money-form').addEventListener('submit', addMoneyRecord);
            
            // 绑定搜索事件
            document.getElementById('student-search').addEventListener('input', filterStudents);
            document.getElementById('interaction-search').addEventListener('input', filterInteractions);
            document.getElementById('money-search').addEventListener('input', filterMoneyRecords);
            
            // 自动保存功能
            setInterval(saveToLocalStorage, 30000); // 每30秒自动保存
            
            updateDisplay();
        });

        // 标签页切换
        function showTab(tabName) {
            // 隐藏所有标签页
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
            });
            
            // 移除所有活跃状态
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // 显示选中的标签页
            document.getElementById(tabName + '-tab').classList.remove('hidden');
            event.target.classList.add('active');
            
            // 更新下拉菜单
            updateStudentSelects();
            
            // 如果是统计页面，更新统计数据
            if (tabName === 'reports') {
                updateStats();
            }
        }

        // 学生管理功能
        function addStudent(e) {
            e.preventDefault();
            
            const student = {
                id: nextStudentId++,
                name: document.getElementById('student-name').value,
                age: document.getElementById('student-age').value || null,
                school: document.getElementById('student-school').value || '',
                grade: document.getElementById('student-grade').value || '',
                phone: document.getElementById('student-phone').value || '',
                parentName: document.getElementById('parent-name').value || '',
                parentPhone: document.getElementById('parent-phone').value || '',
                dormContact: document.getElementById('dorm-contact').value || '',
                notes: document.getElementById('student-notes').value || '',
                createdAt: new Date()
            };
            
            students.push(student);
            saveToLocalStorage(); // 自动保存
            clearStudentForm();
            updateDisplay();
            alert('✅ 学生添加成功！');
        }

        function clearStudentForm() {
            document.getElementById('student-form').reset();
        }

        function editStudent(id) {
            const student = students.find(s => s.id === id);
            if (student) {
                document.getElementById('student-name').value = student.name;
                document.getElementById('student-age').value = student.age || '';
                document.getElementById('student-school').value = student.school || '';
                document.getElementById('student-grade').value = student.grade || '';
                document.getElementById('student-phone').value = student.phone || '';
                document.getElementById('parent-name').value = student.parentName || '';
                document.getElementById('parent-phone').value = student.parentPhone || '';
                document.getElementById('dorm-contact').value = student.dormContact || '';
                document.getElementById('student-notes').value = student.notes || '';
                
                // 删除原记录，提交时会作为新记录添加
                deleteStudent(id);
            }
        }

        function deleteStudent(id) {
            if (confirm('确定要删除这个学生吗？相关的互动记录和零用钱记录也会被删除。')) {
                students = students.filter(s => s.id !== id);
                interactions = interactions.filter(i => i.studentId !== id);
                moneyRecords = moneyRecords.filter(m => m.studentId !== id);
                saveToLocalStorage(); // 自动保存
                updateDisplay();
            }
        }

        // 互动记录功能
        function addInteraction(e) {
            e.preventDefault();
            
            const files = Array.from(document.getElementById('interaction-attachments').files);
            const attachments = files.map(file => ({
                name: file.name,
                size: file.size,
                type: file.type,
                url: URL.createObjectURL(file)
            }));
            
            const interaction = {
                id: nextInteractionId++,
                studentId: parseInt(document.getElementById('interaction-student').value),
                type: document.getElementById('interaction-type').value,
                date: document.getElementById('interaction-date').value,
                duration: document.getElementById('interaction-duration').value || null,
                summary: document.getElementById('interaction-summary').value,
                attachments: attachments,
                createdAt: new Date()
            };
            
            interactions.push(interaction);
            saveToLocalStorage(); // 自动保存
            clearInteractionForm();
            updateDisplay();
            alert('✅ 互动记录添加成功！');
        }

        function clearInteractionForm() {
            document.getElementById('interaction-form').reset();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('interaction-date').value = today;
        }

        function deleteInteraction(id) {
            if (confirm('确定要删除这条互动记录吗？')) {
                interactions = interactions.filter(i => i.id !== id);
                saveToLocalStorage(); // 自动保存
                updateDisplay();
            }
        }

        // 零用钱管理功能
        function addMoneyRecord(e) {
            e.preventDefault();
            
            const files = Array.from(document.getElementById('money-attachments').files);
            const attachments = files.map(file => ({
                name: file.name,
                size: file.size,
                type: file.type,
                url: URL.createObjectURL(file)
            }));
            
            let amount = parseFloat(document.getElementById('money-amount').value);
            if (document.getElementById('money-type').value === '支出') {
                amount = -amount;
            }
            
            const record = {
                id: nextMoneyId++,
                studentId: parseInt(document.getElementById('money-student').value),
                type: document.getElementById('money-type').value,
                amount: amount,
                date: document.getElementById('money-date').value,
                category: document.getElementById('money-category').value || '其他',
                description: document.getElementById('money-description').value || '',
                attachments: attachments,
                createdAt: new Date()
            };
            
            moneyRecords.push(record);
            saveToLocalStorage(); // 自动保存
            clearMoneyForm();
            updateDisplay();
            alert('✅ 交易记录添加成功！');
        }

        function clearMoneyForm() {
            document.getElementById('money-form').reset();
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('money-date').value = today;
        }

        function deleteMoneyRecord(id) {
            if (confirm('确定要删除这条交易记录吗？')) {
                moneyRecords = moneyRecords.filter(m => m.id !== id);
                saveToLocalStorage(); // 自动保存
                updateDisplay();
            }
        }

        // 显示更新功能
        function updateDisplay() {
            displayStudents();
            displayInteractions();
            displayMoneyRecords();
            updateStudentSelects();
        }

        function displayStudents() {
            const container = document.getElementById('students-list');
            const searchTerm = document.getElementById('student-search').value.toLowerCase();
            
            const filteredStudents = students.filter(student => 
                student.name.toLowerCase().includes(searchTerm) ||
                (student.school || '').toLowerCase().includes(searchTerm) ||
                (student.grade || '').toLowerCase().includes(searchTerm) ||
                (student.phone || '').includes(searchTerm) ||
                (student.parentName || '').toLowerCase().includes(searchTerm) ||
                (student.parentPhone || '').includes(searchTerm)
            );
            
            if (filteredStudents.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #666;">暂无学生记录</p>';
                return;
            }
            
            container.innerHTML = filteredStudents.map(student => `
                <div class="student-card">
                    <h3>${student.name}</h3>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin: 15px 0;">
                        <p><strong>年龄:</strong> ${student.age || '未填写'}</p>
                        <p><strong>学校:</strong> ${student.school || '未填写'}</p>
                        <p><strong>年级/专业:</strong> ${student.grade || '未填写'}</p>
                        <p><strong>学生电话:</strong> ${student.phone || '未填写'}</p>
                    </div>
                    <div style="background: rgba(102, 126, 234, 0.1); padding: 15px; border-radius: 8px; margin: 15px 0;">
                        <h4 style="color: #667eea; margin-bottom: 10px;">👨‍👩‍👧‍👦 家长信息</h4>
                        <p><strong>家长姓名:</strong> ${student.parentName || '未填写'}</p>
                        <p><strong>家长电话:</strong> ${student.parentPhone || '未填写'}</p>
                    </div>
                    <div style="background: rgba(72, 187, 120, 0.1); padding: 15px; border-radius: 8px; margin: 15px 0;">
                        <h4 style="color: #48bb78; margin-bottom: 10px;">🏠 宿舍信息</h4>
                        <p><strong>宿管联系:</strong> ${student.dormContact || '未填写'}</p>
                    </div>
                    <p><strong>备注:</strong> ${student.notes || '无'}</p>
                    <p style="font-size: 0.9em; color: #666;"><strong>创建时间:</strong> ${new Date(student.createdAt).toLocaleString()}</p>
                    <div style="margin-top: 15px;">
                        <button class="btn btn-warning" onclick="editStudent(${student.id})">编辑</button>
                        <button class="btn btn-danger" onclick="deleteStudent(${student.id})">删除</button>
                    </div>
                </div>
            `).join('');
        }

        function displayInteractions() {
            const container = document.getElementById('interactions-list');
            const searchTerm = document.getElementById('interaction-search').value.toLowerCase();
            
            const filteredInteractions = interactions.filter(interaction => {
                const student = students.find(s => s.id === interaction.studentId);
                const studentName = student ? student.name : '未知学生';
                
                return studentName.toLowerCase().includes(searchTerm) ||
                       interaction.type.toLowerCase().includes(searchTerm) ||
                       interaction.summary.toLowerCase().includes(searchTerm);
            });
            
            if (filteredInteractions.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #666;">暂无互动记录</p>';
                return;
            }
            
            container.innerHTML = filteredInteractions.map(interaction => {
                const student = students.find(s => s.id === interaction.studentId);
                const studentName = student ? student.name : '未知学生';
                
                return `
                    <div class="record-item">
                        <h4>${studentName} - ${interaction.type}</h4>
                        <p><strong>日期:</strong> ${interaction.date}</p>
                        ${interaction.duration ? `<p><strong>时长:</strong> ${interaction.duration} 分钟</p>` : ''}
                        <p><strong>摘要:</strong> ${interaction.summary}</p>
                        ${interaction.attachments.length > 0 ? `
                            <p><strong>附件:</strong></p>
                            <div style="margin-top: 10px;">
                                ${interaction.attachments.map(file => `
                                    <div style="display: inline-block; margin: 5px;">
                                        ${file.type.startsWith('image/') ? 
                                            `<img src="${file.url}" alt="${file.name}" class="attachment-preview">` :
                                            `<a href="${file.url}" download="${file.name}" style="color: #667eea;">${file.name}</a>`
                                        }
                                    </div>
                                `).join('')}
                            </div>
                        ` : ''}
                        <div style="margin-top: 15px;">
                            <button class="btn btn-danger" onclick="deleteInteraction(${interaction.id})">删除</button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function displayMoneyRecords() {
            const container = document.getElementById('money-list');
            const searchTerm = document.getElementById('money-search').value.toLowerCase();
            
            const filteredRecords = moneyRecords.filter(record => {
                const student = students.find(s => s.id === record.studentId);
                const studentName = student ? student.name : '未知学生';
                
                return studentName.toLowerCase().includes(searchTerm) ||
                       record.category.toLowerCase().includes(searchTerm) ||
                       record.description.toLowerCase().includes(searchTerm);
            });
            
            if (filteredRecords.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #666;">暂无交易记录</p>';
                return;
            }
            
            container.innerHTML = filteredRecords.map(record => {
                const student = students.find(s => s.id === record.studentId);
                const studentName = student ? student.name : '未知学生';
                
                return `
                    <div class="record-item">
                        <h4>${studentName} - ${record.category}</h4>
                        <p><strong>日期:</strong> ${record.date}</p>
                        <p><strong>金额:</strong> 
                            <span class="${record.amount >= 0 ? 'money-positive' : 'money-negative'}">
                                ¥${Math.abs(record.amount).toFixed(2)} ${record.amount >= 0 ? '(收入)' : '(支出)'}
                            </span>
                        </p>
                        ${record.description ? `<p><strong>描述:</strong> ${record.description}</p>` : ''}
                        ${record.attachments.length > 0 ? `
                            <p><strong>附件:</strong></p>
                            <div style="margin-top: 10px;">
                                ${record.attachments.map(file => `
                                    <div style="display: inline-block; margin: 5px;">
                                        ${file.type.startsWith('image/') ? 
                                            `<img src="${file.url}" alt="${file.name}" class="attachment-preview">` :
                                            `<a href="${file.url}" download="${file.name}" style="color: #667eea;">${file.name}</a>`
                                        }
                                    </div>
                                `).join('')}
                            </div>
                        ` : ''}
                        <div style="margin-top: 15px;">
                            <button class="btn btn-danger" onclick="deleteMoneyRecord(${record.id})">删除</button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        // 更新学生选择下拉菜单
        function updateStudentSelects() {
            const selects = [
                document.getElementById('interaction-student'),
                document.getElementById('money-student')
            ];
            
            selects.forEach(select => {
                const currentValue = select.value;
                select.innerHTML = '<option value="">请选择学生</option>';
                
                students.forEach(student => {
                    const option = document.createElement('option');
                    option.value = student.id;
                    option.textContent = student.name;
                    if (student.id.toString() === currentValue) {
                        option.selected = true;
                    }
                    select.appendChild(option);
                });
            });
        }

        // 搜索过滤功能
        function filterStudents() {
            displayStudents();
        }

        function filterInteractions() {
            displayInteractions();
        }

        function filterMoneyRecords() {
            displayMoneyRecords();
        }

        // 统计功能
        function updateStats() {
            const container = document.getElementById('stats-grid');
            
            // 计算统计数据
            const totalStudents = students.length;
            const totalInteractions = interactions.length;
            const totalMoneyRecords = moneyRecords.length;
            
            const totalIncome = moneyRecords
                .filter(r => r.amount > 0)
                .reduce((sum, r) => sum + r.amount, 0);
                
            const totalExpenses = moneyRecords
                .filter(r => r.amount < 0)
                .reduce((sum, r) => sum + Math.abs(r.amount), 0);
            
            const netBalance = totalIncome - totalExpenses;
            
            container.innerHTML = `
                <div class="stat-card">
                    <div class="stat-number">${totalStudents}</div>
                    <div>学生总数</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${totalInteractions}</div>
                    <div>互动记录</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${totalMoneyRecords}</div>
                    <div>交易记录</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">¥${totalIncome.toFixed(2)}</div>
                    <div>总收入</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">¥${totalExpenses.toFixed(2)}</div>
                    <div>总支出</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number ${netBalance >= 0 ? 'money-positive' : 'money-negative'}">
                        ¥${netBalance.toFixed(2)}
                    </div>
                    <div>净余额</div>
                </div>
            `;
        }

        // 数据导出功能
        function exportData() {
            const data = {
                students: students,
                interactions: interactions,
                moneyRecords: moneyRecords,
                exportDate: new Date().toISOString()
            };
            
            const dataStr = JSON.stringify(data, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});
            
            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = `student_database_${new Date().toISOString().split('T')[0]}.json`;
            link.click();
        }

        // 清空所有数据
        function clearAllData() {
            if (confirm('⚠️ 确定要清空所有数据吗？此操作不可恢复！')) {
                if (confirm('最后确认：真的要删除所有学生、互动记录和交易记录吗？')) {
                    students = [];
                    interactions = [];
                    moneyRecords = [];
                    nextStudentId = 1;
                    nextInteractionId = 1;
                    nextMoneyId = 1;
                    
                    // 清空本地存储
                    localStorage.removeItem('studentDatabase');
                    
                    updateDisplay();
                    alert('✅ 所有数据已清空');
                }
            }
        }
    </script>
</body>
</html>
